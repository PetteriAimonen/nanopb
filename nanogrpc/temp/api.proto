// A very simple protocol definition, consisting of only
// one message.

syntax = "proto2";

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloResponse);
  rpc DummyMethod (UartConfig) returns (SendRequest);
}

service DummyService {
  rpc SayHello (HelloRequest) returns (HelloResponse);
  rpc DummyMethod (UartConfig) returns (SendRequest);
}


message HelloRequest {
  required string test_string = 1;
  required int32 dummy_number = 2;
}

message HelloResponse {
  required string test_string = 1;
  required int32 dummy_number = 2;
}

message UartConfig {
    required int32 speed = 1;
    enum DataSize {
      DS_7B = 1;
      DS_8B = 2;
      DS_9B = 3;
    }
    required DataSize data_size = 2;
    enum Parity {
      NONE = 0;
      ODD = 1;
      EVEN = 2;
    }
    required Parity parity = 3;
    enum StopBits {
      ONE = 1;
      TWO = 2;
    }
    required StopBits stop_bits = 4;
}

message SendRequest {
  optional UartConfig uart_config= 1;
  required bytes data = 2;
}

// mesage Byte {
//   required Varing
// }
